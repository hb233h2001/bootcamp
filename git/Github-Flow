Github Flow는 Github에서 제안하는 간단하고 효율적인 브랜치 관리 전략. 주로 소프트웨어 개발에서 코드 변경 사항을 관리하고 배포하는 데 사용.
    Github Flow 진행 단계

    1.메인 브랜치(main branch): 기본 브랜치. main 브랜치는 항상 배포 가능한 상태로 유지. 이 브랜치에 직접 커밋하지 않고 기능 브랜치를 통해 병합.
    2.기능 브랜치(feature branch) 생성: 새로운 작업 브랜치 생성. 새로운 기능이나 버그 수정을 시작할 때 main 브랜치에서 기능 브랜치 생성.
    3.커밋(commit): 작업 내용 커밋. 기능 브랜치에서 작업한 내용을 작은 단위로 커밋. 각 커밋 메시지는 명확하게 변경 사항을 설명할 필요가 있다.
    4.푸시(push): 원격 저장소로 푸시.
    5.PullRequest 생성: Github에서 기능 브랜치를 main 브랜치에 병합하기 위해 PullRequest를 생성.
    6.코드 리뷰 및 병합(merge): 코드 리뷰, PullRequest에 자동화된 테스트를 설정하여 코드의 품질 확인, 병합이 이루어짐.
    7.배포(deploy): main 브랜치에 병합된 변경 사항은 자동으로 배포되거나 수동으로 배포될 수 있다. Github Flow는 배포를 자주하고, 작은 단위로 변경 사항을 배포하는 것이 좋다.

    추가 정보

    지속적 통합(CI): Github Actions와 같은 CI 도구를 사용하여 PullRequest마다 자동으로 테스트를 실행 가능.
    지속적 배포(CD): 지속적 배포를 설정하여 main 브랜치에 병합될 때마다 자동으로 배포할 수 있다.

    앞서 작성했던 PullRequest를 활용하여 협업 프로젝트를 효율적으로 수행하는 작업 흐름이다.